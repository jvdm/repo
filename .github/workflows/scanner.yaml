name: Scanner

on:
  - push
  - pull_request

jobs:
  # images:
  #   runs-on: ubuntu-latest
  #   env:
  #     REGISTRY: quay.io/stackrox-io
  #     IMAGE_POLL_INTERVAL_S: 10
  #     IMAGE_POLL_RETRIES: 3

  #   steps:
  #     - name: Poll for Scanner Image Availability
  #       run: |
  #         imgs=(
  #             "https://quay.io/v2/stackrox-io/scanner-v4/manifests/$IMAGE_TAG"
  #             "https://quay.io/v2/stackrox-io/scanner-v4-db/manifests/$IMAGE_TAG"
  #         )
  #         curl --fail \
  #              --show-error \
  #              --retry "$IMAGE_POLL_RETRIES" \
  #              --retry-delay "$IMAGE_POLL_INTERVAL_S" \
  #              "${urls[@]}" \
  #         && exit 0
  #         echo "Image(s) not found"
  #         exit 1

  test:
    runs-on: ubuntu-latest
    env:
      POSTGRESQL_HOST: localhost
      POSTGRESQL_USER: scanner
      POSTGRESQL_DATABASE: scanner
      POSTGRESQL_PASSWORD: scanner
    services:
      postgresql:
        image: registry.redhat.io/rhel8/postgresql-13
        env:
          POSTGRESQL_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRESQL_DATABASE: ${{ env.POSTGRESQL_DATABASE }}
          POSTGRESQL_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        credentials:
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}
        options: >-
          --health-cmd "pg_isready -U scanner -d scanner -h 127.0.0.1 -p 5432"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Verify PostgreSQL
        id: check-db
        run: |
          PGPASSWORD="$POSTGRESQL_PASSWORD" \
              psql \
                  -h "$POSTGRESQL_HOST" \
                  -U "$POSTGRESQL_USER" \
                  -d "$POSTGRESQL_DATABASE" \
                  -c "SELECT 1"

      - name: Dump PostgreSQL Logs on Failure
        if: failure() && steps.check-db.outcome == 'failure'
        run: docker logs ${{ job.services.postgres.id }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: stackrox/stackrox
          fetch-depth: 0
          ref: master

      - name: Make certs
        run: |
          cd scanner
          make certs
          # Setup permissions so the scanner container can read the certs.
          rm certs/scanner-v4/ca.pem
          rm certs/scanner-v4/ca-key.pem
          cp certs/ca/root.pem certs/scanner-v4/ca.pem
          cp certs/ca/key.pem certs/scanner-v4/ca-key.pem
          chmod -R o+r certs

      - name: Make config
        run: |
          mkdir config
          chmod 777 config
          cat >config/config.yaml <<EOF
          http_listen_addr: 127.0.0.1:9443
          grpc_listen_addr: 127.0.0.1:8443
          indexer:
            enable: true
            database:
              conn_string: "host=$POSTGRESQL_HOST port=5432 user=$POSTGRESQL_USER password=$POSTGRESQL_PASSWORD database=$POSTGRESQL_DATABASE
              password_file: ""
            get_layer_timeout: 1m
            repository_to_cpe_url: https://security.access.redhat.com/data/metrics/repository-to-cpe.json
            name_to_repos_url: https://security.access.redhat.com/data/metrics/container-name-repos-map.json
          matcher:
            enable: true
            database:
              conn_string: "host=$POSTGRESQL_HOST port=5432 user=$POSTGRESQL_USER password=$POSTGRESQL_PASSWORD database=$POSTGRESQL_DATABASE
            vulnerabilities_url: https://definitions.stackrox.io/v4/vulnerability-bundles/dev/vulnerabilities.zip
          mtls:
            certs_dir: /scanner/certs/scanner-v4
          log_level: info          
          EOF
          cat config/config.yaml

      - name: Run scanner
        run: |
          echo $(readlink -f scanner/certs)
          echo $(readlink -f config)
          ls -l config
          ls -l scanner/certs
          docker run \
              -v $(readlink -f scanner/certs):/scanner/certs \
              -v $(readlink -f config):/scanner/config \
              quay.io/stackrox-io/scanner-v4:4.7.x-296-g8a25807280 \
              --conf /scanner/config/config.yaml
