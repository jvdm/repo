name: Scanner

on:
  - push
  - pull_request

jobs:
  images:
    runs-on: ubuntu-latest
    env:
      REGISTRY: quay.io/stackrox-io
      IMAGE_POLL_INTERVAL_S: 10
      IMAGE_POLL_RETRIES: 3

    steps:
      - name: Poll for Scanner Image Availability
        run: |
          for _ in $(seq 1 "$IMAGE_POLL_RETRIES"); do
              (
                  skopeo inspect docker://$REGISTRY/scanner-v4:4.7.x-655-g2d758baa73
                  skopeo inspect docker://$REGISTRY/scanner-v4-db:4.7.x-655-g2d758baa73
              ) && exit 0
              sleep "$IMAGE_POLL_INTERVAL_S"
          done
          echo "Image(s) not found"
          exit 1

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: registry.redhat.io/rhel8/postgresql-13
        env:
          POSTGRESQL_USER: scanner
          POSTGRESQL_DATABASE: scanner
          POSTGRESQL_PASSWORD: scanner
        ports:
          - 5432:5432
        credentials:
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}
        options: >-
          --health-cmd "pg_isready -U scanner -d scanner -h 127.0.0.1 -p 5432"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Verify PostgreSQL
        id: check-db
        run: PGPASSWORD=scanner psql -h localhost -U scanner -d scanner -c "SELECT 1"

      - name: Dump PostgreSQL Logs on Failure
        if: failure() && steps.check-db.outcome == 'failure'
        run: docker logs ${{ job.services.postgres.id }}
